% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evaluate_trainedmodel_performance_multi.R
\name{evaluate_trainedmodel_performance_multi}
\alias{evaluate_trainedmodel_performance_multi}
\title{Evaluate Model Performance on Image Data}
\usage{
evaluate_trainedmodel_performance_multi(
  trained_models_dir,
  image_data_dir,
  output_dir = "data/",
  class_names,
  noise.category = "noise",
  unfreeze = TRUE
)
}
\arguments{
\item{trained_models_dir}{Path to the directory containing trained models (.pt files).}

\item{image_data_dir}{Path to the directory containing image data for evaluation.}

\item{output_dir}{Path to the directory where the performance scores will be saved.}

\item{class_names}{Character vector specifying class names. User specified from training data folders.}

\item{noise.category}{Category label for noise class. Default is 'noise'.}

\item{unfreeze}{Logical indicating whether to unfreeze model parameters. User specified based on trained model.}
}
\value{
Invisible NULL. The performance scores are written to the specified output directory.
}
\description{
Given trained models and a set of images, this function evaluates the performance of the models.
}
\examples{
{
# Set directory paths for trained models and test images

trained_models_dir <- system.file("extdata", "trainedresnetmulti/", package = "gibbonNetR")
image_data_dir <- system.file("extdata", "multiclass/test/", package = "gibbonNetR")
class_names <-  c('female.gibbon','hornbill.helmeted','hornbill.rhino','long.argus','noise')
# Evaluate the performance of the trained models using the test images
evaluate_trainedmodel_performance_multi(trained_models_dir=trained_models_dir,
                                        class_names=class_names,
                                        image_data_dir=image_data_dir,
                                        output_dir= paste(tempdir(), '/data/'),
                                        noise.category = "noise")
# Find the location of saved evaluation files
CSVName <- list.files(paste(tempdir(), '/data/'), recursive = TRUE, full.names = TRUE)

# Check the output of the first file
head(read.csv(CSVName[1]))
}
}
