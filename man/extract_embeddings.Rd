% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_embeddings.R
\name{extract_embeddings}
\alias{extract_embeddings}
\title{Extract Embeddings and Create Scatter Plots}
\usage{
extract_embeddings(test_input, model_path, target_class)
}
\arguments{
\item{test_input}{A character string specifying the path to the directory containing the test images.}

\item{model_path}{A character string specifying the path to the pre-trained PyTorch model file.}

\item{target_class}{A character string specifying the class of interest for cluster analysis.}
}
\value{
A list containing the following components:
\describe{
\item{EmbeddingsCombined}{A combined scatter plot of embeddings, showing class and cluster colors.}
\item{NMI}{Normalized Mutual Information (NMI) score between clustering results and ground truth labels.}
\item{ConfusionMatrix}{A confusion matrix showing classification performance metrics.}
}
}
\description{
This function loads a fine-tuned PyTorch model, extracts embeddings from a set of test images,
performs dimensionality reduction using UMAP, and creates scatter plots to visualize the embeddings.
}
\examples{
{
train_CNN_binary(
  input.data.path = "inst/extdata/binary/",
  test.data = "inst/extdata/binary/test/",
  architecture = "alexnet",  #' Choose 'alexnet', 'vgg16', 'vgg19', 'resnet18', 'resnet50', or 'resnet152'
  unfreeze.param = TRUE,
  batch_size = 6,
  learning_rate = 0.001,
  epoch.iterations = 1,  #' Or any other list of integer epochs
  early.stop = "yes",
  save.model= TRUE,
  output.base.path = paste(tempdir(),'/BinaryDir/',sep=''),
  trainingfolder = "test_binary"
)
# Create list of files in temp directory
TempFileList <- list.files(paste(tempdir(),'/BinaryDir/',sep=''),full.names = T,recursive = T)

# Find model path
ModelPath <- TempFileList[which(str_detect(TempFileList,'model.pt'))]

# Specify model path
ImageFile <- "inst/extdata/multiclass/test/"

# Function to extract and plot embeddings
result <- extract_embeddings(test_input=ImageFile,
                             model_path =ModelPath,
                             target_class = "duet"
)

print(result)
}
}
